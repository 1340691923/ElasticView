{"version":3,"file":"use-dialog.B7hCziNn.js","sources":["../../../vue/node_modules/.pnpm/element-plus@2.7.8_vue@3.4.35_typescript@5.5.4_/node_modules/element-plus/es/components/dialog/src/dialog-content.mjs","../../../vue/node_modules/.pnpm/element-plus@2.7.8_vue@3.4.35_typescript@5.5.4_/node_modules/element-plus/es/components/dialog/src/dialog.mjs","../../../vue/node_modules/.pnpm/element-plus@2.7.8_vue@3.4.35_typescript@5.5.4_/node_modules/element-plus/es/components/dialog/src/use-dialog.mjs"],"sourcesContent":["import '../../../utils/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\n\nconst dialogContentProps = buildProps({\n  center: Boolean,\n  alignCenter: Boolean,\n  closeIcon: {\n    type: iconPropType\n  },\n  draggable: Boolean,\n  overflow: Boolean,\n  fullscreen: Boolean,\n  showClose: {\n    type: Boolean,\n    default: true\n  },\n  title: {\n    type: String,\n    default: \"\"\n  },\n  ariaLevel: {\n    type: String,\n    default: \"2\"\n  }\n});\nconst dialogContentEmits = {\n  close: () => true\n};\n\nexport { dialogContentEmits, dialogContentProps };\n//# sourceMappingURL=dialog-content.mjs.map\n","import '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { dialogContentProps } from './dialog-content.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\n\nconst dialogProps = buildProps({\n  ...dialogContentProps,\n  appendToBody: Boolean,\n  appendTo: {\n    type: definePropType(String),\n    default: \"body\"\n  },\n  beforeClose: {\n    type: definePropType(Function)\n  },\n  destroyOnClose: Boolean,\n  closeOnClickModal: {\n    type: Boolean,\n    default: true\n  },\n  closeOnPressEscape: {\n    type: Boolean,\n    default: true\n  },\n  lockScroll: {\n    type: Boolean,\n    default: true\n  },\n  modal: {\n    type: Boolean,\n    default: true\n  },\n  openDelay: {\n    type: Number,\n    default: 0\n  },\n  closeDelay: {\n    type: Number,\n    default: 0\n  },\n  top: {\n    type: String\n  },\n  modelValue: Boolean,\n  modalClass: String,\n  width: {\n    type: [String, Number]\n  },\n  zIndex: {\n    type: Number\n  },\n  trapFocus: Boolean,\n  headerAriaLevel: {\n    type: String,\n    default: \"2\"\n  }\n});\nconst dialogEmits = {\n  open: () => true,\n  opened: () => true,\n  close: () => true,\n  closed: () => true,\n  [UPDATE_MODEL_EVENT]: (value) => isBoolean(value),\n  openAutoFocus: () => true,\n  closeAutoFocus: () => true\n};\n\nexport { dialogEmits, dialogProps };\n//# sourceMappingURL=dialog.mjs.map\n","import { getCurrentInstance, ref, computed, watch, nextTick, onMounted } from 'vue';\nimport { useTimeoutFn, isClient } from '@vueuse/core';\nimport { isUndefined } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../config-provider/index.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useGlobalConfig } from '../../config-provider/src/hooks/use-global-config.mjs';\nimport { defaultNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useLockscreen } from '../../../hooks/use-lockscreen/index.mjs';\n\nconst useDialog = (props, targetRef) => {\n  var _a;\n  const instance = getCurrentInstance();\n  const emit = instance.emit;\n  const { nextZIndex } = useZIndex();\n  let lastPosition = \"\";\n  const titleId = useId();\n  const bodyId = useId();\n  const visible = ref(false);\n  const closed = ref(false);\n  const rendered = ref(false);\n  const zIndex = ref((_a = props.zIndex) != null ? _a : nextZIndex());\n  let openTimer = void 0;\n  let closeTimer = void 0;\n  const namespace = useGlobalConfig(\"namespace\", defaultNamespace);\n  const style = computed(() => {\n    const style2 = {};\n    const varPrefix = `--${namespace.value}-dialog`;\n    if (!props.fullscreen) {\n      if (props.top) {\n        style2[`${varPrefix}-margin-top`] = props.top;\n      }\n      if (props.width) {\n        style2[`${varPrefix}-width`] = addUnit(props.width);\n      }\n    }\n    return style2;\n  });\n  const overlayDialogStyle = computed(() => {\n    if (props.alignCenter) {\n      return { display: \"flex\" };\n    }\n    return {};\n  });\n  function afterEnter() {\n    emit(\"opened\");\n  }\n  function afterLeave() {\n    emit(\"closed\");\n    emit(UPDATE_MODEL_EVENT, false);\n    if (props.destroyOnClose) {\n      rendered.value = false;\n    }\n  }\n  function beforeLeave() {\n    emit(\"close\");\n  }\n  function open() {\n    closeTimer == null ? void 0 : closeTimer();\n    openTimer == null ? void 0 : openTimer();\n    if (props.openDelay && props.openDelay > 0) {\n      ;\n      ({ stop: openTimer } = useTimeoutFn(() => doOpen(), props.openDelay));\n    } else {\n      doOpen();\n    }\n  }\n  function close() {\n    openTimer == null ? void 0 : openTimer();\n    closeTimer == null ? void 0 : closeTimer();\n    if (props.closeDelay && props.closeDelay > 0) {\n      ;\n      ({ stop: closeTimer } = useTimeoutFn(() => doClose(), props.closeDelay));\n    } else {\n      doClose();\n    }\n  }\n  function handleClose() {\n    function hide(shouldCancel) {\n      if (shouldCancel)\n        return;\n      closed.value = true;\n      visible.value = false;\n    }\n    if (props.beforeClose) {\n      props.beforeClose(hide);\n    } else {\n      close();\n    }\n  }\n  function onModalClick() {\n    if (props.closeOnClickModal) {\n      handleClose();\n    }\n  }\n  function doOpen() {\n    if (!isClient)\n      return;\n    visible.value = true;\n  }\n  function doClose() {\n    visible.value = false;\n  }\n  function onOpenAutoFocus() {\n    emit(\"openAutoFocus\");\n  }\n  function onCloseAutoFocus() {\n    emit(\"closeAutoFocus\");\n  }\n  function onFocusoutPrevented(event) {\n    var _a2;\n    if (((_a2 = event.detail) == null ? void 0 : _a2.focusReason) === \"pointer\") {\n      event.preventDefault();\n    }\n  }\n  if (props.lockScroll) {\n    useLockscreen(visible);\n  }\n  function onCloseRequested() {\n    if (props.closeOnPressEscape) {\n      handleClose();\n    }\n  }\n  watch(() => props.modelValue, (val) => {\n    if (val) {\n      closed.value = false;\n      open();\n      rendered.value = true;\n      zIndex.value = isUndefined(props.zIndex) ? nextZIndex() : zIndex.value++;\n      nextTick(() => {\n        emit(\"open\");\n        if (targetRef.value) {\n          targetRef.value.scrollTop = 0;\n        }\n      });\n    } else {\n      if (visible.value) {\n        close();\n      }\n    }\n  });\n  watch(() => props.fullscreen, (val) => {\n    if (!targetRef.value)\n      return;\n    if (val) {\n      lastPosition = targetRef.value.style.transform;\n      targetRef.value.style.transform = \"\";\n    } else {\n      targetRef.value.style.transform = lastPosition;\n    }\n  });\n  onMounted(() => {\n    if (props.modelValue) {\n      visible.value = true;\n      rendered.value = true;\n      open();\n    }\n  });\n  return {\n    afterEnter,\n    afterLeave,\n    beforeLeave,\n    handleClose,\n    onModalClick,\n    close,\n    doClose,\n    onOpenAutoFocus,\n    onCloseAutoFocus,\n    onCloseRequested,\n    onFocusoutPrevented,\n    titleId,\n    bodyId,\n    closed,\n    style,\n    overlayDialogStyle,\n    rendered,\n    visible,\n    zIndex\n  };\n};\n\nexport { useDialog };\n//# sourceMappingURL=use-dialog.mjs.map\n"],"names":["dialogContentProps","buildProps","center","Boolean","alignCenter","closeIcon","type","iconPropType","draggable","overflow","fullscreen","showClose","default","title","String","ariaLevel","dialogContentEmits","close","dialogProps","appendToBody","appendTo","definePropType","beforeClose","Function","destroyOnClose","closeOnClickModal","closeOnPressEscape","lockScroll","modal","openDelay","Number","closeDelay","top","modelValue","modalClass","width","zIndex","trapFocus","headerAriaLevel","dialogEmits","open","opened","closed","UPDATE_MODEL_EVENT","value","isBoolean","openAutoFocus","closeAutoFocus","useDialog","props","targetRef","_a","emit","getCurrentInstance","nextZIndex","useZIndex","lastPosition","titleId","useId","bodyId","visible","ref","rendered","openTimer","closeTimer","namespace","useGlobalConfig","defaultNamespace","style","computed","style2","varPrefix","addUnit","overlayDialogStyle","display","stop","useTimeoutFn","doOpen","doClose","handleClose","shouldCancel","isClient","useLockscreen","watch","val","isUndefined","nextTick","scrollTop","transform","onMounted","afterEnter","afterLeave","beforeLeave","onModalClick","onOpenAutoFocus","onCloseAutoFocus","onCloseRequested","onFocusoutPrevented","event","_a2","detail","focusReason","preventDefault"],"mappings":"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","x_google_ignoreList":[0,1,2]}